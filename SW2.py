import subprocess
import os
import re
import winreg as reg
tanium_list = []
IIS_bool = "False"
def SW2() :
    count = 0
    list = []
    text = []
    text_list = {}
    result=[]
    cmd = os.popen("sc query state= all").readlines()
    dict = {}
    system_list = []
    for line in cmd :
        nline = line.split('\n')[0]
        if "SERVICE_NAME" in nline :
            dict['SERVICE_NAME'] = nline.split(':')[1].strip()
        elif "DISPLAY_NAME" in nline :
            dict['DISPLAY_NAME'] = nline.split(':')[1].strip()
        elif "종류" in nline :
            dict["TYPE"] = nline.split(':')[1].strip()
        elif "상태" in nline :
            dict['STATUS'] = nline.split(':')[1]
            system_list.append(dict)
            dict = {}
    try :
        os.chdir("\\Windows\\System32\\inetsrv")
        cmd = subprocess.check_output("appcmd list config /xml").decode('utf-8')
        for i in cmd.split('>') :
            i = i + ">"
            x = re.sub(r'\n', '', i)
            y = re.sub(r'\r', '', x)
            list.append(y.strip())
        for i in list :
            if "<CONFIG " in i :
                text.append(i)
                continue
            elif "<?xml" in i :
                continue
            elif "<appcmd" in i :
                continue
            text.append(i)
            if "</CONFIG" in i :
                text_list["index"] = count
                text_list['text'] = text
            else :
                continue
            result.append(text_list)
            text = []
            text_list = {}
            count = count + 1
    except Exception as e:
        IIS_bool = "True"
    # tanium.results.add("Test : {}".format(IIS_bool))
    # [SW2-01]
    error_dict = {}
    cmd = os.popen('net share | find /v "$" | find /v "명령"').readlines()
    list = []
    error_dict['SWV'] = 'SW2-01'
    count = 0
    for line in cmd :
        nline = line.split('\n')[0]
        if len(nline.strip().split(':')) == 2 :
            list.append(nline.strip().split(':')[1])
    for line in list :
        cmd = os.popen('icacls "' + line + '" | findstr /i "everyone" 2>nul').read()
        if "Everyone" in cmd :
            count = count + 1
    sw1 = "Everyone 권한의 공유가 {}개 있습니다".format(count) 
    error_dict['value'] = sw1
    tanium_list.append(error_dict)
    #[SW2-02]
    error_dict = {}
    error_list = []
    count = 0
    cmd = os.popen('net share').read().splitlines()
    for i in cmd:
        if '기본 공유' in i :
            error_dict['기본공유 존재여부'] = i
        count = count + 1
        if count == len(cmd) :
            if '기본공유 존재여부' not in error_dict:
                error_dict['기본공유 존재여부'] = 'Null'
    cmd = os.popen('reg query "HKLM\SYSTEM\CurrentControlSet"Services\lanmanserver\parameters\AutoShareServer"').read()
    if len(cmd) == 0 :
        error_dict['AutoShareServer'] = 'None'
    else :
        error_dict['AutoShareServer'] = cmd
    error_dict['SWV'] = 'SW2-02'
    error_list.append(error_dict)
    tanium_list.append(error_list)
    #[SW2-03]
    count = 0
    error_dict = {}
    error_list = []    
    for i in system_list :
        if i['DISPLAY_NAME'] == "Alerter" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Computer Browser" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Clipbook" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Cryptographic Services" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "DHCP Client" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Distributed Link Tracking Client" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "DNS Client" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Error reporting Service" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Human Interface Device Access" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "IMAPI CD-Burning COM Service" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Messenger" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "NetMeeting Remote Desktop Sharing" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Portable Media Serial Number" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "#print Spooler" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Remote Registry" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Simple TCP/IP Services" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "Wireless Zero Configuration" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
    error_dict['SWV'] = 'SW2-03'
    error_dict['value'] = error_list
    tanium_list.append(error_dict)
    #[SW2-04]
    count = 0
    error_dict = {}
    error_list = []
    for i in system_list:
        if i['DISPLAY_NAME'] == "IIS Admin Service":
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "World Wide Web Publishing Service" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
        elif i['DISPLAY_NAME'] == "World Wide Web Publishing 서비스" :
            count = count + 1
            error_list.append(i['DISPLAY_NAME'])
    if len(error_list) == 0 :
        error_list.append('IIS 설치되지않음')
    error_dict['value'] = error_list
    error_dict['SWV'] = 'SW2-04'
    tanium_list.append(error_dict)
    #[SW2-05]
    error_dict = {}
    error_list = []
    if IIS_bool == "True" :
        error_dict['SWV'] = 'SW2-05'
        error_dict['value'] = 'IIS가 설치되어있지않음'
    else:
        for i in result :
            for j in i['text'] :
                if 'system.webServer/directoryBrowse' in j :
                    if len(i['text']) > 1 :
                        for y in i['text'] :
                            error_dict = {}
                            if "directoryBrowse enabled=" in y :
                                error_dict['name'] = "directoryBrowse"
                                error_dict['value'] = y.split(' ')[1]
                                error_list.append(error_dict)
        error_dict['SWV'] = 'SW2-05'
        error_dict['value'] = error_list
    tanium_list.append(error_dict)
    #[SW2-06]
    error_dict = {}
    error_list = []
    error_dict['SWV'] = 'SW2-06'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
    elif IIS_bool == "False":
        cmd = os.popen('icacls C:\inetpub\*scripts* | find /i "Everyone"').readlines()
        if len(cmd) == 0 :
            error_dict['value1'] = 'scripts 폴더가 없거나 Everyone 권한이 존재하지 않음'
        else :
            error_dict['value1'] = cmd
        cmd = os.popen('icacls C:\inetpub\cgi-bin | find /i "Everyone"').readlines()
        if len(cmd) == 0 :
            error_dict['value2'] = 'scripts 폴더가 없거나 Everyone 권한이 존재하지 않음'
        else :
            error_dict['value2'] = cmd
        cmd = os.popen('icacls %IIS_WEB_HOME%\*scripts* | find /i "Everyone"').readlines()
        if len(cmd) == 0 :
            error_dict['value3'] = 'scripts 폴더가 없거나 Everyone 권한이 존재하지 않음'
        else :
            error_dict['value3'] = cmd
    tanium_list.append(error_dict)
    
    #[SW2-07]
    error_dict = {}
    error_list = []
    if IIS_bool == "True" :
        error_dict['SWV'] = 'SW2-07'
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    elif IIS_bool == "False":
        for i in result :
            for j in i['text'] :
                if 'system.webServer/asp' in j :
                    for y in i['text'] :
                        error_dict = {}
                        error_dict['SWV'] = 'SW2-07'
                        if 'ParentPaths' in y :
                            error_dict['name'] = "ParentPaths"
                            error_dict['value'] = y.split(' ')[1]
                            error_list.append(error_dict)
                            break
                        elif 'ParentPaths' not in y :
                            error_dict['name'] = "ParentPaths"
                            error_dict['value'] = 'value is null'
                        elif '</config' in y:
                            error_list.append(error_dict)
    tanium_list.append(error_list)
    #[SW2-08]
    error_dict = {}
    try :
        key = reg.HKEY_LOCAL_MACHINE
        key_value = "SOFTWARE\Microsoft\InetStp"
        open = reg.OpenKey(key, key_value, 0, reg.KEY_ALL_ACCESS)
        value, type = reg.QueryValueEx(open, "SetupString")
        error_dict['SWV'] = 'SW2-08'
        error_dict['IIS Version'] = value
        if float(value.split(' ')[1].strip()) < 7.0 :
            dir = os.listdir('C:\inetpub\iissamples')
            error_dict['iissamples'] = dir
            dir = os.listdir('C:\winnt\help\iishelp')
            error_dict['iishelp'] = dir
            dir = os.listdir('C:\program files\common')
            error_dict['common'] = dir
            dir = os.listdir('C:\System32\inetsrv\iisadmpwd')
            error_dict['iisadmpwd'] = dir
        else :
            error_dict['value'] = 'IIS 7.0 이상 버전은 해당없음'
    except :
        error_dict['SWV'] = 'SW2-08'
        error_dict['IIS Version'] = "IIS 설치되어있지않음"
    tanium_list.append(error_dict)
    #[SW2-09]
    error_list = []
    error_dict = {}
    error_dict['SWV'] = 'SW2-09'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else:
        for i in result :
            for j in i['text'] :
                if 'system.applicationHost/applicationPools' in j :
                    for y in i['text'] :
                        if 'processModel' in y :
                            if "LocalSystem" in y :
                                split = y.split(' ')
                                error_dict['name'] = "processModel"
                                error_dict['value'] = split[split.index('identityType="LocalSystem"')]
                                error_list.append(error_dict)
                                break
                            else :
                                error_dict['name'] = "processModel"
                                error_dict['value'] = 'value is null'
                                continue
                        else :
                            error_dict['name'] = "processModel"
                            error_dict['value'] = 'value is null'
                            if '</CONFIG>' in y:
                                error_list.append(error_dict)
    tanium_list.append(error_list)
    #[SW2-10]
    count = 0
    error_dict = {}
    error_list = []
    path = ""
    real_path = ""
    error_dict['SWV'] = 'SW2-10'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
    else:
        for i in result :
            for j in i['text'] :
                if 'system.applicationHost/sites' in j :
                    for y in i['text'] :
                        if 'virtualDirectory path' in y :
                            path = y
        for i in path.split(' ') :
            if 'physicalPath' in i :
                real_path = i.strip('physicalPath=').strip('"').replace('%SystemDrive%', "C:\\")
        dir = []
    try :
        dir = os.listdir(real_path)
        for i in dir :
            if '.lnk' in i :
                error_dict['바로가기 여부'] = i
            count = count + 1
            if len(dir) == count :
                if '바로가기 여부' not in i :
                    error_dict['바로가기 여부'] = 'None'
    except :
        error_dict['value'] = "{} 경로가 올바르지 않습니다.".format(real_path)
    tanium_list.append(error_dict)
    #[SW2-11]
    count = 0
    error_list = []
    error_dict = {}
    bool = "True"
    error_dict['SWV'] = 'SW2-11'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else:
        for i in result :
            for j in i['text'] :
                if 'system.webServer/asp' in j :
                    for y in i['text'] :
                        if 'limits' in y :
                            if "bufferingLimit" in y or "maxRequestEntityAllowed" in y:
                                split = y.split(' ')
                                for z in split :
                                    error_dict = {}
                                    error_dict['SWV'] = 'SW2-11'
                                    if "bufferingLimit" in z :
                                        error_dict['name'] = "bufferingLimit"
                                        error_dict['value'] = z
                                        error_list.append(error_dict)
                                    elif "maxRequestEntityAllowed" in z:
                                        error_dict['name'] = "maxRequestEntityAllowed"
                                        error_dict['value'] = z
                                        error_list.append(error_dict)
                                    count = count + 1
                                    if count == len(split) :
                                        bool = "False"
                                        break
                        else :
                            if bool == "False":
                                break
                            error_dict['name'] = "limits"
                            error_dict['value'] = 'value is null'
                            if '</CONFIG>' in y:
                                error_list.append(error_dict)
    tanium_list.append(error_list)
    #[SW2-12]
    count = 0
    error_list = []
    error_dict = {}
    if IIS_bool == "True" :
        error_dict['SWV'] = 'SW2-12'
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else:
        for i in result :
            for j in i['text'] :
                if 'system.webServer/security/requestFiltering' in j :
                    for y in i['text'] :
                        error_dict = {}
                        error_dict['SWV'] = 'SW2-12'
                        if '".asa"' in y :
                            split = y.split(' ')
                            for z in split:
                                if 'fileExtension' in z :
                                    error_dict['name'] = z
                                elif 'allowed' in z :
                                    error_dict['value'] = z
                            error_list.append(error_dict)
                        elif '".asax"' in y :
                            split = y.split(' ')
                            for z in split:
                                if 'fileExtension' in z :
                                    error_dict['name'] = z
                                elif 'allowed' in z :
                                    error_dict['value'] = z
                            error_list.append(error_dict)
                        count = count + 1
                        if len(i['text']) == count and len(error_list) == 0:
                            error_dict['name'] = ".asa, .asax"
                            error_dict['value'] = 'value is null'
                            error_list.append(error_dict)
                            break
    tanium_list.append(error_list)
    # [SW2-13]
    error_dict = {}
    try :
        key = reg.HKEY_LOCAL_MACHINE
        key_value = "SOFTWARE\Microsoft\InetStp"
        open = reg.OpenKey(key, key_value, 0, reg.KEY_ALL_ACCESS)
        value, type = reg.QueryValueEx(open, "SetupString")
        error_dict['SWV'] = 'SW2-13'
        error_dict['IIS Version'] = value
        if float(value.split(' ')[1].strip()) < 6.0 :
            error_dict['value'] = 'IIS 6.0 이하 버전임'
        else :
            error_dict['value'] = 'IIS 6.0 이상 버전은 해당없음'
    except :
        error_dict['SWV'] = 'SW2-13'
        error_dict['IIS Version'] = "IIS 설치되어있지않음"
    tanium_list.append(error_dict)
    #[SW2-14]
    count = 0
    root = ""
    error_dict = {}
    error_list = []
    if IIS_bool == "True" :
        error_dict['SWV'] = 'SW2-14'
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else:
        for i in result :
            for j in i['text'] :
                if 'system.applicationHost/sites' in j :
                    for y in i['text'] :
                        error_dict = {}
                        error_dict['SWV'] = 'SW2-14'
                        if 'physicalPath' in y :
                            split = y.split(' ')
                            for z in split:
                                if 'physicalPath' in z :
                                    root = z.split('=')[1].strip('"')
                                    break
                        else :
                            error_dict['name'] = 'physicalPath'
                            error_dict['value'] = '값이 없음'
                        count = count + 1
                        if count == len(i['text']) and len(list) == 0:
                            error_list.append(error_dict)
                            break
        if len(error_list) == 0 :
            cmd = os.popen('icacls "' + root + '" | findstr /i "everyone" 2>null ').readlines()
            if len(cmd) == 0 :
                error_dict['name'] = 'everyone'
                error_dict['value'] = '값이 없음'
            else :
                error_dict['name'] = 'everyone'
                error_dict['value'] = cmd
            error_list.append(error_dict)
    tanium_list.append(error_list)
    # [SW2-15]
    count = 0
    for_count = 0
    error_dict = {}
    error_list = []
    if IIS_bool == "True" :
        error_dict['SWV'] = 'SW2-15'
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else:
        for i in result :
            for j in i['text'] :
                if 'system.webServer/handlers' in j :
                    for y in i['text'] :
                        error_dict = {}
                        error_dict['SWV'] = 'SW2-15'
                        if '"*.htr"' in y :
                            split = y.split(' ')
                            for z in split:
                                if '*.htr' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict)
                            count = count + 1
                        elif '"*.idc"' in y:
                            split = y.split(' ')
                            for z in split:
                                if '*.idc' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict)
                            count = count + 1
                        elif '"*.stm"' in y:
                            split = y.split(' ')
                            for z in split:
                                if '*.stm' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict) 
                            count = count + 1  
                        elif '"*.shtm"' in y:
                            split = y.split(' ')
                            for z in split:
                                if '*.shtm' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict)
                            count = count + 1
                        elif '"*.shtml"' in y:
                            split = y.split(' ')
                            for z in split:
                                if '*.shtml' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict)
                            count = count + 1
                        elif '"*.#printer"' in y:
                            split = y.split(' ')
                            for z in split:
                                if '*.#printer' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict)
                            count = count + 1
                        elif '"*.htw"' in y:
                            split = y.split(' ')
                            for z in split:
                                if '*.htw' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict) 
                            count = count + 1
                        elif '"*.ida"' in y:
                            split = y.split(' ')
                            for z in split:
                                if '*.ida' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict)
                            count = count + 1
                        elif '"*.idq"' in y:
                            split = y.split(' ')
                            for z in split:
                                if '*.idq' in z :
                                    error_dict['value'] = z
                                if 'name' in z :
                                    error_dict['name'] = z.strip("'name=").strip('"')
                            error_list.append(error_dict)
                            count = count + 1
                        else :
                            error_dict['name'] = '스크립트 매핑'
                            error_dict['value'] = 'value is null'
                        for_count = for_count + 1
                        if for_count == len(i['text']) and len(error_list) == 0:
                            error_list.append(error_dict)
                            break
    tanium_list.append(error_list)
    #[SW2-16]
    error_dict = {}
    try:
        key = reg.HKEY_LOCAL_MACHINE
        key_value = "SOFTWARE\Microsoft\InetStp"
        open = reg.OpenKey(key, key_value, 0, reg.KEY_ALL_ACCESS)
        value, type = reg.QueryValueEx(open, "SetupString")
        error_dict['SWV'] = 'SW2-16'
        error_dict['IIS Version'] = value
        if float(value.split(' ')[1].strip()) < 6.0 :
            key_value = "SYSTEM\CurrentControlSet\Services\W3SVC\Parameters"
            open = reg.OpenKey(key, key_value, 0, reg.KEY_ALL_ACCESS)
            value, type = reg.QueryValueEx(open, "SSIEnableCmdDirective")
            error_dict['value'] = value
        else :
            error_dict['value'] = 'IIS 6.0 이상 버전은 해당없음'
    except:
        error_dict['SWV'] = 'SW2-16'
        error_dict['IIS Version'] = 'IIS 설치되어있지않음'
    tanium_list.append(error_dict)
    #[SW2-17]
    for_count = 0
    error_dict = {}
    error_list = []
    if IIS_bool == "True" :
        error_dict['SWV'] = 'SW2-17'
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else:
        for i in result :
            for j in i['text'] :
                if 'system.webServer/security/isapiCgiRestriction' in j :
                    for y in i['text'] :
                        error_dict = {}
                        error_dict['SWV'] = 'SW2-17'
                        if '"Active Server Pages"' in y :
                            split = y.split(' ')
                            for z in split:
                                if 'allowed' in z :
                                    error_dict['name'] = 'Active Server Pages'
                                    error_dict['value'] = z
                                    error_list.append(error_dict)
                                    break
                        else :
                            error_dict['name'] = '스크립트 매핑'
                            error_dict['value'] = 'value is null'
                        for_count = for_count + 1
                        if for_count == len(i['text']) and len(error_list) == 0:
                            error_list.append(error_dict)
                            break
    tanium_list.append(error_list)
    #[SW2-18]
    nline = []
    error_dict = {}
    error_list = []
    error_dict['SWV'] = 'SW2-18'
    cmd = os.popen("""wmic nicconfig where "TcpipNetbiosOptions<>null and ServiceName<>'VMnetAdapter'" get Description, TcpipNetbiosOptions""").readlines()
    for line in cmd :
        nline.append(line.split('\n')[0])
    nline = filter(None, nline)
    for i in nline :
        print(i)
        if 'TcpipNetbiosOptions' in i :
            index = i.find('T')
        else :
            error_dict['name'] = i[:index]
            error_dict['value'] = i[index]
            error_list.append(error_dict)
    print(error_list)
    error_list = [v for v in error_list if v]
    tanium_list.append(error_list)
    #[2-19]
    count = 0
    error_list = []
    error_dict = {}    
    for i in system_list :
        error_dict['SWV'] = 'SW2-19'
        if "Microsoft FTP Service" in i['DISPLAY_NAME'] :
            error_dict['Value'] = i
            break
        else :
            if 'Value' not in error_dict:
                error_dict['Value'] = 'FTP 사용중이 아님'
    error_list.append(error_dict)
    tanium_list.append(error_list)

    #[SW2-20]
    error_dict = {}
    error_list = []
    bool = "False"
    error_dict['SWV'] = 'SW2-20'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else:
        for i in result :
            for j in i['text'] :
                if 'system.ftpServer/security/authorization' in j :
                    for y in i['text'] :
                        if 'accessType="Allow"' in y :
                            for k in y.split() :
                                if 'users' in k :
                                    error_dict['value'] = k
                                    bool = 'True'
                                    break
                        else :
                            error_dict['value'] = 'FTP 권한 부여 규칙이 설정되지 않음'
                        if bool == "True" :
                            break
                if 'value' not in error_dict :
                    error_dict['value'] = 'FTP가 설정되지 않음'
                    continue
        error_list.append(error_dict)
    tanium_list.append(error_list)
    #[SW2-21]
    error_dict = {}
    error_list = []
    error_dict['SWV'] = 'SW2-21'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else :
        for i in result :
            for j in i['text'] :
                if 'system.applicationHost/sites' in j :
                    for y in i['text'] :
                        if 'anonymousAuthentication' in y :
                            if 'enabled' in y:
                                error_dict['value'] = y.strip('<').strip('/>').strip()
                                break
                            error_dict['value'] = 'FTP 익명 인증 사용 안함'
                        else :
                            if 'value' not in error_dict:
                                error_dict['value'] = 'FTP 게시 안함'
        error_list.append(error_dict)
    tanium_list.append(error_list)

    # [SW2-22]
    count = 0
    for_count = 0
    error_dict = {}
    error_list = []
    error_dict['SWV'] = 'SW2-22'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else :
        for i in result :
            for j in i['text'] :
                if 'system.ftpServer/security/ipSecurity' in j :
                    for y in i['text'] :
                        
                        if 'allowUnlisted' in y :
                            split = y.split(' ')
                            for z in split :
                                if 'allowUnlisted' in z :
                                    error_dict['allowUnlisted'] = z.strip('>').strip('allowUnlisted=').strip('"')

                        if 'ipAddress' in y :
                            split = y.split(' ')
                            for z in split:
                                if 'ipAddress' in z:
                                    error_dict['name'] = z
                                elif 'allowed' in z :
                                    error_dict['value'] = z
                                count = count + 1
                                if count == len(split) :
                                    if 'allowUnlisted' not in error_dict:     
                                        error_dict['allowUnlisted'] = 'true'
                                    error_list.append(error_dict)
                                    break
                        else :
                            error_dict['name'] = "ipAddress"
                            error_dict['value'] = "value is None"
                        for_count = for_count + 1
                        
                        if for_count == len(i['text']) and len(error_list) == 0:
                            error_list.append(error_dict)
                            break
    tanium_list.append(error_list)

    #[SW2-23]
    error_dict = {}
    error_dict['SWV'] = 'SW2-23'
    cmd = os.popen('reg query "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\DNS Server\Zones" /s | find /I "SecureSecondaries"').read().splitlines()
    if len(cmd) == 0 :
        error_dict['Value'] = "DNS 서비스 사용안함"
    else :
        error_dict['Value'] = cmd
    tanium_list.append(error_dict)

    #[SW2-24]
    count = 0
    for_count = 0
    error_dict = {}
    error_list = []
    error_dict['SWV'] = 'SW2-24'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else :
        for i in result :
            for j in i['text'] :
                if 'system.applicationHost/sites' in j :
                    for y in i['text'] :
                        if 'virtualDirectory path' in y :
                            if "/msadc" in y or "/MSADC" in y :
                                split = y.split(' ')
                                for z in split:
                                    if 'path' in z :
                                        error_dict['name'] = 'virtualDirectory path'
                                        error_dict['value'] = z
                                        error_list.append(error_dict)
                                        break
                            else :
                                error_dict['name'] = 'virtualDirectory path'
                                error_dict['value'] = "/MSADC is None"
                            if len(error_list) != 0 :
                                break
                        count = count + 1
                        if count == len(i['text']) :
                            error_list.append(error_dict)
                            break
        cmd = os.system('reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC\Parameters\ADCLaunch" | find /I "RDSServer.DataFactory"')
        cmd2 = os.system('reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC\Parameters\ADCLaunch" | find /I "AdvancedDataFactory"')
        cmd3 = os.system('reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC\Parameters\ADCLaunch" | find /I "VbBusObj.VbBusObjCls"')
        registry = []
        if cmd == 0 :
            registry.append("RDSServer.DataFactory is Avialiable")
        if cmd2 == 0 :
            registry.append("AdvancedDataFactory is Avialiable")
        if cmd3 == 0 :
            registry.append("VbBusObj.VbBusObjCls is Avialiable")
            
        error_list[0]['registry'] = registry 
    tanium_list.append(error_list)

    #[SW2-25]
    cmd = os.popen('reg query "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings" /v MinorVersion').readlines()
    nline = []
    error_dict = {}
    error_dict['SWV'] = 'SW2-25'
    error_list = []
    for line in cmd :
        nline.append(line.split('\n')[0])
    nline = filter(None, nline)
    for i in nline :
        if 'HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings' in i :
            continue
        error_dict['name'] = '최신 서비스팩'
        error_dict['value'] = i
        error_list.append(error_dict)
    tanium_list.append(error_list)

    #[SW2-26]chdir
    cmd = os.popen('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" | find /I "MinEncryptionLevel"').readlines()
    nline = []
    error_dict = {}
    error_list = []
    for line in cmd :
        nline.append(line.split('\n')[0])
    nline = filter(None, nline)
    list = []
    for i in nline :
        list = i.split(' ')
    list = filter(None, list)
    error_dict['SWV'] = 'SW2-26'
    for i in list :
        if '0x0' in i :
            error_dict['name'] = '암호화수준'
            error_dict['value'] = int(i, 16)
            error_list.append(error_dict)
        elif '0x1' in i :
            error_dict['name'] = '암호화수준'
            error_dict['value'] = int(i, 16)
            error_list.append(error_dict)
        elif '0x2' in i :
            error_dict['name'] = '암호화수준'
            error_dict['value'] = int(i, 16)
            error_list.append(error_dict)
        elif '0x3' in i :
            error_dict['name'] = '암호화수준'
            error_dict['value'] = int(i, 16)
            error_list.append(error_dict)
        elif '0x4' in i :
            error_dict['name'] = '암호화수준'
            error_dict['value'] = int(i, 16)
            error_list.append(error_dict)
        elif '0x5' in i :
            error_dict['name'] = '암호화수준'
            error_dict['value'] = int(i, 16)
            error_list.append(error_dict)
    tanium_list.append(error_list)

    #[SW2-27]
    count = 0
    for_count = 0
    error_dict = {}
    error_list = []
    list = []
    error_dict['SWV'] = 'SW2-27'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else :
        for i in result :
            for j in i['text'] :
                if 'system.webServer/httpErrors' in j :
                    for y in i['text'] :
                        if 'statusCode' in y :
                            split = y.split(' ')
                            for z in split:
                                if 'statusCode' in z :
                                    list.append(z.strip('statusCode=').strip('"'))
                                    error_dict['name'] = 'statusCode'
                                    error_dict['value'] = list
                        count = count + 1
                        if count == len(i['text']) :
                            error_list.append(error_dict)
                            break
    tanium_list.append(error_list)
    # [SW2-28]
    count = 0
    error_list = []
    error_dict = {}    
    error_dict['SWV'] = 'SW2-28'
    for i in system_list :
        if 'SNMP Service' in i['DISPLAY_NAME'] or 'SNMP 서비스' in i['DISPLAY_NAME'] :
            error_dict['Value'] = i
            break
        else :
            error_dict['Value'] = 'SNMP 서비스 존재하지않음'  
    tanium_list.append(error_dict)
    # [SW2-29]
    count = 0
    error_list = []
    error_dict = {}    
    error_dict['SWV'] = 'SW2-29'
    for i in system_list :
        if 'SNMP Service' in i['DISPLAY_NAME'] or 'SNMP 서비스' in i['DISPLAY_NAME'] :
            cmd = os.popen('reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SNMP\Parameters\ValidCommunities"').read().splitlines()
            if len(cmd) == 0 :
                error_dict['value'] = '레지스트리 존재하지 않음'
            else :
                cmd = [v for v in cmd if v]
                for j in cmd :
                    if 'HKEY_LOCAL_MACHINE' in j :
                        continue
                    error_list.append(j)
                error_dict['value'] = error_list  
        else :
            if 'value' not in error_dict:
                error_dict['value'] = 'SNMP 서비스 존재하지않음' 
    tanium_list.append(error_dict)

    #[SW2-30]
    cmd = os.popen('reg query "HKLM\SYSTEM\CurrentControlSet\Services\SNMP\Parameters\PermittedManagers" 2>&1').readlines()
    nline = []
    error_dict = {}
    error_list = []
    list = []
    error_dict['SWV'] = 'SW2-30'
    for line in cmd :
        nline.append(line.split('\n')[0])
    nline = filter(None, nline)
    for i in nline :
        if 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SNMP\Parameters\PermittedManagers' in i:
            continue
        list.append(i)
    if len(list) == 0 :
        error_dict['name'] = "SNMP"
        error_dict['value'] = "'모든 호스트로 SNMP 패킷 받아들이기' 설정되어있음"
        error_list.append(error_dict)
    else :
        if '오류' in list[0] :
            error_dict['name'] = "SNMP"
            error_dict['value'] = "SNMP가 설치되어있지않음"
            error_list.append(error_dict)
        else:
            error_dict['name'] = "SNMP"
            error_dict['value'] = "'특정 호스트({})로 SNMP 패킷 받아들이기' 설정되어있음".format(list)
            error_list.append(error_dict)
    tanium_list.append(error_list)

    #[SW2-31]
    error_dict = {}
    error_list = []
    error_dict['SWV'] = 'SW2-31'
    os.chdir("\\Windows\\System32\\inetsrv")
    cmd = os.popen('net start | find /I "DNS Server"').read()
    if len(cmd) == 0 :
        error_dict['name'] = "DNS"
        error_dict['value'] = "DNS 서비스 사용하지 않음"
        error_list.append(error_dict)
    else :
        cmd = os.popen('reg query "HKLM\software\microsoft\Windows NT\CurrentVersion\DNS Server\Zones" /s | find "AllowUpdate"').read()
        error_dict['name'] = "DNS"
        error_dict['value'] = cmd
        error_list.append(error_dict)
    tanium_list.append(error_list)
        
    # [SW2-32]
    count = 0
    error_dict = {}
    error_list = []
    list = []
    error_dict['SWV'] = 'SW2-32'
    if IIS_bool == "True" :
        error_dict['value'] = 'IIS가 설치되어있지않음'
        error_list.append(error_dict)
    else :
        for i in result :
            for j in i['text'] :
                if 'system.webServer/rewrite/outboundRules' in j :
                    for y in i['text'] :
                        count = count + 1
                        if "rule name" in y :
                            list.append(y)
                        elif 'match' in y :
                            list.append(y)
                        elif count == len(i['text']):
                            error_dict['http'] = list
                            if len(list) == 0 :
                                error_dict['http'] = 'value is null'
                elif 'system.applicationHost/site' in j :
                    for y in i['text'] :
                        if 'suppressDefaultBanner' in y :
                            error_dict['ftp'] = y
                            break
                        if 'ftp' not in error_dict :
                            error_dict['ftp'] = '배너차단 설정 안함'
                        
                else :
                    if 'http' not in error_dict :
                        error_dict['http'] = 'value is null'
                    if 'ftp' not in error_dict:
                        error_dict['ftp'] = 'value is null'
    tanium_list.append(error_dict)

    #[SW2-33]
    error_dict = {}
    error_list = []
    cmd = os.popen('net start | find /I "Telnet"').read()
    error_dict['SWV'] = 'SW2-33'
    if len(cmd) == 0 :
        error_dict['name'] = "Telnet"
        error_dict['value'] = "Telnet 서비스 구동안함 및 사용안함"
        error_list.append(error_dict)
    else :
        cmd = os.system('reg query "HKEY_LOCAL_MACHINE\Software\Microsoft\TelnetServer\1.0" | find /I "NTLM"')
        if cmd == 0 :
            error_dict['name'] = "Telnet"
            error_dict['value'] = "Telnet 서비스 구동중 및 NTLM 인증 방법 사용"
            error_list.append(error_dict)
        else :
            error_dict['name'] = "Telnet"
            error_dict['value'] = "Telnet 서비스 구동중 및 NTLM 인증 방법 사용안함"
            error_list.append(error_dict)
    tanium_list.append(error_list)

    #[SW2-34]
    error_dict = {}
    error_list = []
    nline = []
    error_dict['SWV'] = 'SW2-34'
    cmd = os.popen('reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" | find /I "MaxIdleTime"').readlines()
    for line in cmd :
        nline.append(line.split('\n')[0])
    nline = filter(None, nline)
    for i in nline :
        if 'fInherit' in i :
            continue
        error_dict['name'] = "TimeOut 제어"
        error_dict['value'] = i
    error_list.append(error_dict)
    tanium_list.append(error_list)
    # [SW2-35]
    error_list = []
    cmd_list  = []
    error_dict = {}
    cmd = os.popen('schtasks').read().splitlines()
    for i in cmd :
        if i == '' :
            error_list.append(cmd_list)
            cmd_list = []
            continue
        cmd_list.append(i)
    error_list = [v for v in error_list if v]
    error_dict['SWV'] = 'SW2-35'
    error_dict['Value'] = error_list
    tanium_list.append(error_dict)
    #[SW2-36]
    error_dict = {}
    error_list = []
    error_dict['SWV'] = 'SW2-36'
    cmd = os.popen('reg query "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\Rdpwd\Tds\Tcp" | find /I "PortNumber"').read()
    nline = filter(None, cmd.split(' '))
    for i in nline :
        if 'PortNumber' in i:
            error_dict['name'] = i
        elif 'REG_DWORD' in i :
            continue
        else:
            error_dict['value'] = int(i, 16)
    error_list.append(error_dict)
    tanium_list.append(error_list)
    
    # [SW2-37]
    count = 0
    error_dict = {}    
    error_dict['SWV'] = 'SW2-37'
    for i in system_list :
        if 'SMTP' in i['DISPLAY_NAME'] :
            error_dict['Value'] = i
            break
        else :
            error_dict['Value'] = 'SMTP 서비스 존재하지않음'
    tanium_list.append(error_dict)

    #[SW2-38]
    error_dict = {}
    error_dict['SWV'] = 'SW2-38'
    cmd = os.popen('reg query "HKLM\System\CurrentControlSet\Services\DNS"').read().splitlines()
    if len(cmd) == 0 :
        error_dict['Value'] = "DNS 서비스 사용안함"
    else :
        cmd = os.popen('reg query "HKLM\System\CurrentControlSet\Services\DNS\Parameters /v NoRecursion"').read().splitlines()
        if len(cmd) == 0 :
            error_dict['Value'] = 'Recursive Query 제한 레지스트리 존재 안함'
        else :
            error_dict['Value'] = cmd
    tanium_list.append(error_dict)

    # [SW2-39]
    error_list = []
    error_dict = {}    
    error_dict['SWV'] = 'SW2-39'
    for i in system_list :
        if 'Telnet' in i['DISPLAY_NAME'] :
            error_dict['Value'] = i
            break
        else :
            error_dict['Value'] = 'Telnet 서비스 존재하지않음'
    tanium_list.append(error_dict)

    # [SW2-40]
    error_list = []
    error_dict = {}    
    cmd = os.popen('net share').read().splitlines()
    bool = "False"
    for i in cmd :
        if bool == "False" :
            if '--------------------------' in i:
                bool = "True"
        else :
            if '명령을 잘 싱행했습니다.' in i :
                continue
            error_list.append(i)
    error_list = [v for v in error_list if v]
    error_dict['SWV'] = 'SW2-40'
    error_dict['Value'] = error_list
    print(error_dict)
    tanium_list.append(error_dict)
    #[SW2-41]
    error_dict = {}
    error_list=[]
    error_dict['SWV'] = 'SW2-41'
    cmd = os.popen('reg query "HKLM\SYSTEM\ControlSet001\Services\DNS\Parameters" | find /I "AllowUpdate"').read()
    if len(cmd) == 0 :
        error_dict['name'] = "DNS Zone"
        error_dict['value'] = "DNS 사용안함"
        error_list.append(error_dict)
    else :
        nline = filter(None, cmd.split(' '))
        for i in nline :
            if 'AllowUpdate' in i:
                error_dict['name'] = i
            elif 'REG_DWORD' in i :
                continue
            else:
                error_dict['value'] = int(i, 16)
        error_list.append(error_dict)
    tanium_list.append(error_list)
    #[SW2-42]
    error_dict = {}
    cmd = os.popen('w32tm /dumpreg /subkey:parameters').read().splitlines()
    cmd = [v for v in cmd if v]
    error_dict['SWV'] = 'SW2-42'
    for i in cmd :
        if 'NtpServer' in i :
            error_dict['NtpServer'] = i
        elif 'Type' in i :
            error_dict['Type'] = i
    tanium_list.append(error_dict)

SW2()
    